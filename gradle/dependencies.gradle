ext.libs = [:]

ext.libs.spring = [
	aop: "org.springframework:spring-aop:${springVersion}",
	aspects: "org.springframework:spring-aspects:${springVersion}",
	context: "org.springframework:spring-context:${springVersion}",
	core: "org.springframework:spring-core:${springVersion}",
	jdbc: "org.springframework:spring-jdbc:${springVersion}",
	orm: "org.springframework:spring-orm:${springVersion}",
	oxm: "org.springframework:spring-oxm:${springVersion}",
	test: "org.springframework:spring-test:${springVersion}",
	tx: "org.springframework:spring-tx:${springVersion}",
	web: "org.springframework:spring-web:${springVersion}",
	webmvc: "org.springframework:spring-webmvc:${springVersion}"
]

ext.libs.springsecurity = [
	config: "org.springframework.security:spring-security-config:${springSecurityVersion}",
	web: "org.springframework.security:spring-security-web:${springSecurityVersion}"
]

ext.libs.spring.data = [
	neo4j: [
		core: "org.springframework.data:spring-data-neo4j:${springDataVersion}",
        rest: "org.springframework.data:spring-data-neo4j-rest:${springDataVersion}"
	]
]

ext.libs.spring.boot = [
        gradleplugin: "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
        actuator: "org.springframework.boot:spring-boot-actuator:${springBootVersion}",
        starter: "org.springframework.boot:spring-boot-starter:${springBootVersion}",
        web: "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
        jetty: "org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}"
]
ext.libs.junit = "junit:junit:${junitVersion}"

//logging
ext.libs.logging = [
        slf4j: [
                api: "org.slf4j:slf4j-api:$slf4jVersion",
                log4j12: "org.slf4j:slf4j-slf4j-log4j12:$slf4jVersion",
        ],
        logback: [
                core: "ch.qos.logback:logback-core:$logbackVersion",
                classic: "ch.qos.logback:logback-classic:$logbackVersion"
        ],
        log4j2: [
        		api: "org.apache.logging.log4j:log4j-api:${log4j2Version}",
        		core: "org.apache.logging.log4j:log4j-core:${log4j2Version}",
        		jcl: "org.apache.logging.log4j:log4j-jcl:${log4j2Version}",
        		slf4j: [
        			bridge: "org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}"
        		]
        ]
]

ext.libs.databases = [
        neo4j: [
                kernel: "org.neo4j:neo4j-kernel:${neo4jVersion}",
                cypher: "org.neo4j:neo4j-cypher:${neo4jVersion}",
                restgraph: "org.neo4j:neo4j-rest-graphdb:${neo4jVersion}",
                cypherdsl: "org.neo4j:neo4j-cypher-dsl:2.0.0",
                udc: "org.neo4j:neo4j-udc:${neo4jVersion}",
                rest: "org.neo4j:neo4j-rest-graphdb:${neo4jRestVersion}"
        ]
]

ext.libs.thymeleaf = [
        core: "org.thymeleaf:thymeleaf:${thymeleafVersion}",
        spring4: "org.thymeleaf:thymeleaf-spring4:${thymeleafVersion}",
        layout: "org.thymeleaf:thymeleaf:${thymeleafVersion}",
        extras: [
                springsecurity: "org.thymeleaf.extras:thymeleaf-extras-springsecurity3:${thymeleafSpringSecurityVersion}"
        ],
        test: "org.thymeleaf:thymeleaf-test:${thymeleafVersion}"
]

ext.libs.google = [
        guava: "com.google.guava:guava:$guavaVersion"
]
ext.libs.jetty = [
        server: "org.eclipse.jetty:jetty-server:${jettyVersion}",
        webapp: "org.eclipse.jetty:jetty-webapp:${jettyVersion}",
        servlet: "org.eclipse.jetty:jetty-servlet:${jettyVersion}",
        util: "org.eclipse.jetty:jetty-util:${jettyVersion}"
]

ext.libs.themoviedb = "com.omertron:themoviedbapi:$tmdbApiVersion"
ext.libs.javax = [
	validation: "javax.validation:validation-api:${validationVersion}"
]

ext.libs.webjars = [
        bootstrap: "org.webjars:bootstrap:${bootstrapVersion}",
        jquery: "org.webjars:jquery:${jqueryVersion}",
        fontawesome: "org.webjars:font-awesome:${fontAwesomeVersion}"
]

ext.libs.hibernate = [
        validator: "org.hibernate:hibernate-validator:${hibernateValidationVersion}"
]